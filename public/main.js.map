{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/global-query.ts","webpack:///./src/app/graphql.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"jumbotron\\\">\\n    <h1>GraphQL, NodeJs, Express, MongoDB, Angular (v6)</h1>      \\n  </div>\\n  <div class=\\\"col-md-12\\\">\\n    <div class=\\\"row pb-5\\\">\\n      <div class=\\\"col-md-6 float-left\\\">\\n        <h3>Employee List</h3>\\n      </div>\\n      <div class=\\\"col-md-6 float-right\\\">\\n        <!-- Create New User  -->\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary pull-right\\\" (click)=\\\"openModal(template)\\\">\\n        Add Employee  <span class=\\\"lnr lnr-plus-circle\\\"></span>\\n        </button>\\n\\n      </div>\\n    </div>\\n\\n    <!-- Modal Template of New User Form -->\\n    <ng-template #template>\\n      <div class=\\\"modal-header\\\">\\n        <h4 class=\\\"modal-title pull-left\\\">Create New Employee</h4>\\n        <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"modalRef.hide()\\\">\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <form>\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"name\\\">User Name</label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"name\\\" placeholder=\\\"Name\\\" [(ngModel)]=\\\"name\\\">\\n          </div>\\n          <button type=\\\"button\\\" class=\\\"btn btn-default\\\" *ngIf=\\\"!user.id\\\" (click)=\\\"createUser(name);\\\">Create</button>\\n          <button type=\\\"button\\\" class=\\\"btn btn-default\\\" *ngIf=\\\"user.id\\\" (click)=\\\"updateUser(name);\\\">Update</button>\\n        </form>\\n      </div>\\n    </ng-template>\\n\\n    <!-- List of All Users  -->\\n  \\n    <table class=\\\"table table-bordered table-striped table-hover\\\">\\n      <thead >\\n        <tr>\\n          <th class=\\\"text-center table-primary\\\">Emp Id</th>\\n          <th class=\\\"text-center\\\">Emp First</th>\\n          <th class=\\\"text-center\\\">Edit</th>\\n          <th class=\\\"text-center\\\">Delete</th>\\n        </tr>\\n      </thead>\\n      <tbody>\\n        <tr *ngFor=\\\"let user of users; let i = index\\\">\\n          <td class=\\\"table-info\\\">{{ i+1 }}</td>\\n          <td class=\\\"table-warning\\\">{{ user.name }}</td>\\n          <td  class=\\\"table-success\\\">\\n            <!-- Show Edit User Form  -->\\n            <button class=\\\"btn btn-dark \\\" (click)=\\\"showEditUserForm(user, template)\\\">\\n              <span class=\\\"lnr lnr-pencil\\\"></span>\\n            </button>\\n          </td>\\n           <td class=\\\"table-danger\\\">\\n            <!-- Remove User  -->\\n            <button class=\\\"btn btn-danger\\\" (click)=\\\"removeUser(user.id)\\\">\\n              <span class=\\\"lnr lnr-trash\\\"></span>\\n            </button>\\n          </td>\\n        </tr>\\n      </tbody>\\n    </table>\\n  </div>\\n</div>\"","module.exports = \".container .row .col1 {\\n  width: 50%;\\n  margin: 0px; }\\n\\n.container .row .col2 {\\n  width: 50%;\\n  float: right;\\n  margin: 1%; }\\n\\n.container tr {\\n  text-align: center; }\\n\"","import { Component, TemplateRef } from '@angular/core';\nimport { Apollo } from 'apollo-angular';\nimport { Observable } from 'rxjs/Observable';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BsModalRef } from 'ngx-bootstrap/modal/bs-modal-ref.service';\nimport * as Query from './global-query';\nimport 'rxjs/add/operator/map';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  modalRef: BsModalRef;\n  users: Array<any> = []; // List of Users\n  user: any = {};\n  name: any;\n\n  constructor(private apollo: Apollo,\n    private modalService: BsModalService) { }\n\n  ngOnInit() {\n    this.getUsers();\n  }\n\n  /**\n   * Create User\n   * @param value     Name of User\n   */\n  createUser(value) {\n    this.apollo\n      .mutate({\n        mutation: Query.addUser,\n        variables: {\n          name: value\n        },\n        update: (proxy, { data: { addUser } }) => {\n          // Read the data from our cache for this query.\n          const data: any = proxy.readQuery({ query: Query.Users });\n\n          data.users.push(addUser);\n\n          // Write our data back to the cache.\n          proxy.writeQuery({ query: Query.Users, data });\n        }\n      })\n      .subscribe(({ data }) => {\n        this.closeFirstModal(); // Close Modal\n      }, (error) => {\n        console.log('there was an error sending the query', error);\n      });\n  }\n\n  /**\n   * Remove User\n   * @param id \n   */\n  removeUser(id) {\n    this.apollo\n      .mutate({\n        mutation: Query.removeUser,\n        variables: {\n          id: id\n        },\n        update: (proxy, { data: { removeUser } }) => {\n          // Read the data from our cache for this query.\n          const data: any = proxy.readQuery({ query: Query.Users });\n\n          var index = data.users.map(function (x) { return x.id; }).indexOf(id);\n\n          data.users.splice(index, 1);\n\n          // Write our data back to the cache.\n          proxy.writeQuery({ query: Query.Users, data });\n        }\n      })\n      .subscribe(({ data }) => {\n        console.log(data)\n      }, (error) => {\n        console.log('there was an error sending the query', error);\n      });\n  }\n\n  /**\n   * Edit User Form\n   * @param user \n   * @param template \n   */\n  showEditUserForm(user, template) {\n    this.name = user.name;\n    this.user = user;\n    this.modalRef = this.modalService.show(template);\n  }\n\n  /**\n   * Update User\n   * @param user \n   */\n  updateUser(user) {\n    this.apollo\n      .mutate({\n        mutation: Query.updateUser,\n        variables: {\n          id: this.user.id,\n          name: user\n        },\n        update: (proxy, { data: { updateUser } }) => {\n          // Read the data from our cache for this query.\n          const data: any = proxy.readQuery({ query: Query.Users });\n\n          var index = data.users.map(function (x) { return x.id; }).indexOf(this.user.id);\n\n          data.users[index].name = user;\n\n          // Write our data back to the cache.\n          proxy.writeQuery({ query: Query.Users, data });\n        }\n      })\n      .subscribe(({ data }) => {\n        this.closeFirstModal();\n      }, (error) => {\n        console.log('there was an error sending the query', error);\n      });\n  }\n\n  /**\n   * ----------------------------------------------------\n   * Get All Users\n   * ----------------------------------------------------\n   * @method getUsers\n   */\n  getUsers() {\n    this.apollo.watchQuery({ query: Query.Users })\n      .valueChanges\n      .map((result: any) => result.data.users).subscribe((data) => {\n        this.users = data;\n      })\n  }\n\n  // Open Modal\n  openModal(template: TemplateRef<any>) {\n    this.name = '';\n    this.user = {};\n    this.modalRef = this.modalService.show(template);\n  }\n\n  // Close Modal\n  closeFirstModal() {\n    this.modalRef.hide();\n    this.modalRef = null;\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppComponent } from './app.component';\nimport { ModalModule } from 'ngx-bootstrap/modal';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\n// Apollo\nimport { GraphQLModule } from './graphql.module';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule, // provides HttpClient for HttpLink\n    GraphQLModule,\n    FormsModule,\n    ModalModule.forRoot()\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","/**\n * Server Mutation Query\n */\n\n'use strict';\n\nimport gql from 'graphql-tag';\n\nexport const addUser = gql`\n  mutation addUser($name: String!) {\n    addUser(name: $name) {\n      id\n      name\n    }\n  }`;\n\nexport const Users = gql`\n  query {\n    users{\n      id\n      name\n    }\n  }`;\n\nexport const removeUser = gql`\n  mutation removeUser($id: String!) {\n    removeUser(id: $id) {\n      id\n      name\n    }\n  }`;\n\nexport const updateUser = gql`\n  mutation updateUser($id: String!, $name: String!) {\n    updateUser(id: $id, name: $name) {\n      id\n      name\n    }\n  }`;","import { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\n// Apollo\nimport { ApolloModule, Apollo } from 'apollo-angular';\nimport { HttpLinkModule, HttpLink } from 'apollo-angular-link-http';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\n\n //const uri = 'http://localhost:4000/graphql'; // Development\nconst uri = 'https://graphql-demo-vijaychauhanssn.herokuapp.com/graphql-demo'; // Production\n\n@NgModule({\n  exports: [\n    HttpClientModule,\n    ApolloModule,\n    HttpLinkModule\n  ]\n})\nexport class GraphQLModule {\n  constructor(\n    apollo: Apollo,\n    httpLink: HttpLink\n  ) {\n    // create Apollo\n    apollo.create({\n      link: httpLink.create({ uri }),\n      cache: new InMemoryCache()\n    });\n  }\n}","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}